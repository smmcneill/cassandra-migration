#!/bin/bash

# Create a new migration script with descriptive name $1
function migration:new(){
    docker run \
        --rm \
        -v $(pwd)/migrate/config.yml:/cassandra-migrate.yml \
        -v $(pwd)/migrations:/migrations \
        justdomepaul/cassandra-migrate \
        generate $1
}

# Resets migration to a version $1
function migration:reset(){
    docker run \
        --rm \
        -v $(pwd)/migrate/config.yml:/cassandra-migrate.yml \
        -v $(pwd)/migrations:/migrations \
        justdomepaul/cassandra-migrate \
        -H host.docker.internal -p 9042 reset $1
}

# Presuming that cassandra container is up and running, sends you into cqlsh session
function cql(){
    docker exec -it cassandra cqlsh
}

# Start up cassandra and run migrations
function compose:up(){
    compose:down
    docker compose up -d
}

# Shutdown containers
function compose:down(){
    docker compose down
}

function compose:tail(){
    docker compose logs -f
}

# Run tests against local DB
function test(){
    cassandra_id="$(docker ps -q -f name=cassandra)"
    if [ -z "$cassandra_id" ]; then
        compose:up
    fi

    while :; do
        migrate_id="$(docker ps -q -f name=migrate)"        
        if [ -z "$migrate_id" ]; then
            go test ./... -count=1
            break
        else
            echo "Warming up"
            sleep 3
        fi        
    done

    if [ -z "$cassandra_id" ]; then
        compose:down
    fi
}

"$@"